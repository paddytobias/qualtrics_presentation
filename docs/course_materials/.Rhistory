responses = read.csv("NHANES_subset.csv")
head(responses)
responses$ADC011_Comb = paste(responses$ACD011A:responses$ACD011C, sep = ",")
head(responses)
responses$ADC011_Comb = paste(responses$ACD011A, responses$ACD011B, responses$ACD011C, sep = ",")
responses$ACD011_Comb = paste(responses$ACD011A, responses$ACD011B, responses$ACD011C, sep = ",")
responses = read.csv("NHANES_subset.csv")
responses$ACD011_Comb = paste(responses$ACD011A, responses$ACD011B, responses$ACD011C, sep = ",")
head(responses$ACD011_Comb)
i = 1
!is.null(responses$ACD011A[i])
responses$ACD011A[i]
(!is.null(responses$ACD011A[i]) & !is.null(responses$ACD011B[i]) & !is.null(responses$ACD011C[i]))
responses$ACD011B[i]
(!is.na(responses$ACD011A[i]) & !is.na(responses$ACD011B[i]) & !is.na(responses$ACD011C[i]))
responses$ACD011C[i]
as.character(responses$ACD011C[i])
!is.null(as.character(responses$ACD011C[i]))
!is.na(as.character(responses$ACD011C[i]))
as.character(responses$ACD011C[i]) != ""
as.character(responses$ACD011A[i]) != "" & as.character(responses$ACD011B[i]) != "" & as.character(responses$ACD011C[i]) != ""
as.character(responses$ACD011A[i]) != ""
ACD011_Comb = data.frame(as.character())
for i in 1:nrow(responses)){
if (as.character(responses$ACD011A[i]) != "" & as.character(responses$ACD011B[i]) != "" & as.character(responses$ACD011C[i]) != ""){
#ABC
ACD011_Comb[i] = paste(responses$ACD011A[i], responses$ACD011B[i], responses$ACD011C[i], sep = ",")
} else if (as.character(responses$ACD011A[i]) != "" & as.character(responses$ACD011B[i]) == "" & as.character(responses$ACD011C[i]) == "") {
#A
ACD011_Comb[i] = responses$ACD011A[i]
} else if (as.character(responses$ACD011A[i]) != "" & as.character(responses$ACD011B[i]) != "" & as.character(responses$ACD011C[i]) == "") {
#AB
ACD011_Comb[i] = paste(responses$ACD011A[i], responses$ACD011B[i], sep = ",")
} else if (as.character(responses$ACD011A[i]) != "" & as.character(responses$ACD011B[i]) == "" & as.character(responses$ACD011C[i]) != "") {
#AC
ACD011_Comb[i] = paste(responses$ACD011A[i], responses$ACD011C[i], sep = ",")
} else if (as.character(responses$ACD011A[i]) == "" & as.character(responses$ACD011B[i]) != "" & as.character(responses$ACD011C[i]) != "") {
#BC
ACD011_Comb[i] = paste(responses$ACD011B[i], responses$ACD011C[i], sep = ",")
} else if (as.character(responses$ACD011A[i]) == "" & as.character(responses$ACD011B[i]) != "" & as.character(responses$ACD011C[i]) == "") {
#B
ACD011_Comb[i] = responses$ACD011B[i]
} else if (as.character(responses$ACD011A[i]) == "" & as.character(responses$ACD011B[i]) == "" & as.character(responses$ACD011C[i]) != "") {
#C
ACD011_Comb[i] = responses$ACD011C[i]
}
i = 1
if (as.character(responses$ACD011A[i]) != "" & as.character(responses$ACD011B[i]) != "" & as.character(responses$ACD011C[i]) != ""){
#ABC
ACD011_Comb[i] = paste(responses$ACD011A[i], responses$ACD011B[i], responses$ACD011C[i], sep = ",")
} else if (as.character(responses$ACD011A[i]) != "" & as.character(responses$ACD011B[i]) == "" & as.character(responses$ACD011C[i]) == "") {
#A
ACD011_Comb[i] = responses$ACD011A[i]
} else if (as.character(responses$ACD011A[i]) != "" & as.character(responses$ACD011B[i]) != "" & as.character(responses$ACD011C[i]) == "") {
#AB
ACD011_Comb[i] = paste(responses$ACD011A[i], responses$ACD011B[i], sep = ",")
} else if (as.character(responses$ACD011A[i]) != "" & as.character(responses$ACD011B[i]) == "" & as.character(responses$ACD011C[i]) != "") {
#AC
ACD011_Comb[i] = paste(responses$ACD011A[i], responses$ACD011C[i], sep = ",")
} else if (as.character(responses$ACD011A[i]) == "" & as.character(responses$ACD011B[i]) != "" & as.character(responses$ACD011C[i]) != "") {
#BC
ACD011_Comb[i] = paste(responses$ACD011B[i], responses$ACD011C[i], sep = ",")
} else if (as.character(responses$ACD011A[i]) == "" & as.character(responses$ACD011B[i]) != "" & as.character(responses$ACD011C[i]) == "") {
#B
ACD011_Comb[i] = responses$ACD011B[i]
} else if (as.character(responses$ACD011A[i]) == "" & as.character(responses$ACD011B[i]) == "" & as.character(responses$ACD011C[i]) != "") {
#C
ACD011_Comb[i] = responses$ACD011C[i]
}
(as.character(responses$ACD011A[i]) != "" & as.character(responses$ACD011B[i]) != "" & as.character(responses$ACD011C[i]) != "")
(as.character(responses$ACD011A[i]) != "" & as.character(responses$ACD011B[i]) == "" & as.character(responses$ACD011C[i]) == "")
ACD011_Comb = data.frame(as.character())
if (as.character(responses$ACD011A[i]) != "" & as.character(responses$ACD011B[i]) != "" & as.character(responses$ACD011C[i]) != ""){
#ABC
x = paste(responses$ACD011A[i], responses$ACD011B[i], responses$ACD011C[i], sep = ",")
ACD011_Comb = rbind(ACD011_Comb,x)
} else if (as.character(responses$ACD011A[i]) != "" & as.character(responses$ACD011B[i]) == "" & as.character(responses$ACD011C[i]) == "") {
#A
ACD011_Comb = rbind(ACD011_Comb, responses$ACD011A[i])
} else if (as.character(responses$ACD011A[i]) != "" & as.character(responses$ACD011B[i]) != "" & as.character(responses$ACD011C[i]) == "") {
#AB
x = paste(responses$ACD011A[i], responses$ACD011B[i], sep = ",")
ACD011_Comb = rbind(ACD011_Comb,x)
} else if (as.character(responses$ACD011A[i]) != "" & as.character(responses$ACD011B[i]) == "" & as.character(responses$ACD011C[i]) != "") {
#AC
x = paste(responses$ACD011A[i], responses$ACD011C[i], sep = ",")
ACD011_Comb = rbind(ACD011_Comb,x)
} else if (as.character(responses$ACD011A[i]) == "" & as.character(responses$ACD011B[i]) != "" & as.character(responses$ACD011C[i]) != "") {
#BC
ACD011_Comb[i] = paste(responses$ACD011B[i], responses$ACD011C[i], sep = ",")
} else if (as.character(responses$ACD011A[i]) == "" & as.character(responses$ACD011B[i]) != "" & as.character(responses$ACD011C[i]) == "") {
#B
x = responses$ACD011B[i]
ACD011_Comb = rbind(ACD011_Comb,x)
} else if (as.character(responses$ACD011A[i]) == "" & as.character(responses$ACD011B[i]) == "" & as.character(responses$ACD011C[i]) != "") {
#C
x = responses$ACD011C[i]
ACD011_Comb = rbind(ACD011_Comb,x)
}
ACD011_Comb
(as.character(responses$ACD011A[i]) != "" & as.character(responses$ACD011B[i]) == "" & as.character(responses$ACD011C[i]) == "")
responses$ACD011A[i]
responses = read.csv("NHANES_subset.csv", stringsAsFactors = F)
ACD011_Comb = data.frame(as.character())
i = 1
if (as.character(responses$ACD011A[i]) != "" & as.character(responses$ACD011B[i]) != "" & as.character(responses$ACD011C[i]) != ""){
#ABC
x = paste(responses$ACD011A[i], responses$ACD011B[i], responses$ACD011C[i], sep = ",")
ACD011_Comb = rbind(ACD011_Comb,x)
} else if (as.character(responses$ACD011A[i]) != "" & as.character(responses$ACD011B[i]) == "" & as.character(responses$ACD011C[i]) == "") {
#A
ACD011_Comb = rbind(ACD011_Comb, responses$ACD011A[i])
} else if (as.character(responses$ACD011A[i]) != "" & as.character(responses$ACD011B[i]) != "" & as.character(responses$ACD011C[i]) == "") {
#AB
x = paste(responses$ACD011A[i], responses$ACD011B[i], sep = ",")
ACD011_Comb = rbind(ACD011_Comb,x)
} else if (as.character(responses$ACD011A[i]) != "" & as.character(responses$ACD011B[i]) == "" & as.character(responses$ACD011C[i]) != "") {
#AC
x = paste(responses$ACD011A[i], responses$ACD011C[i], sep = ",")
ACD011_Comb = rbind(ACD011_Comb,x)
} else if (as.character(responses$ACD011A[i]) == "" & as.character(responses$ACD011B[i]) != "" & as.character(responses$ACD011C[i]) != "") {
#BC
ACD011_Comb[i] = paste(responses$ACD011B[i], responses$ACD011C[i], sep = ",")
} else if (as.character(responses$ACD011A[i]) == "" & as.character(responses$ACD011B[i]) != "" & as.character(responses$ACD011C[i]) == "") {
#B
x = responses$ACD011B[i]
ACD011_Comb = rbind(ACD011_Comb,x)
} else if (as.character(responses$ACD011A[i]) == "" & as.character(responses$ACD011B[i]) == "" & as.character(responses$ACD011C[i]) != "") {
#C
x = responses$ACD011C[i]
ACD011_Comb = rbind(ACD011_Comb,x)
}
ACD011_Comb
ACD011_Comb = data.frame(as.character())
#i = 1
for i in 1:nrow(responses)){
if (as.character(responses$ACD011A[i]) != "" & as.character(responses$ACD011B[i]) != "" & as.character(responses$ACD011C[i]) != ""){
#ABC
x = paste(responses$ACD011A[i], responses$ACD011B[i], responses$ACD011C[i], sep = ",")
ACD011_Comb = rbind(ACD011_Comb,x)
} else if (as.character(responses$ACD011A[i]) != "" & as.character(responses$ACD011B[i]) == "" & as.character(responses$ACD011C[i]) == "") {
#A
ACD011_Comb = rbind(ACD011_Comb, responses$ACD011A[i])
} else if (as.character(responses$ACD011A[i]) != "" & as.character(responses$ACD011B[i]) != "" & as.character(responses$ACD011C[i]) == "") {
#AB
x = paste(responses$ACD011A[i], responses$ACD011B[i], sep = ",")
ACD011_Comb = rbind(ACD011_Comb,x)
} else if (as.character(responses$ACD011A[i]) != "" & as.character(responses$ACD011B[i]) == "" & as.character(responses$ACD011C[i]) != "") {
#AC
x = paste(responses$ACD011A[i], responses$ACD011C[i], sep = ",")
ACD011_Comb = rbind(ACD011_Comb,x)
} else if (as.character(responses$ACD011A[i]) == "" & as.character(responses$ACD011B[i]) != "" & as.character(responses$ACD011C[i]) != "") {
#BC
ACD011_Comb[i] = paste(responses$ACD011B[i], responses$ACD011C[i], sep = ",")
} else if (as.character(responses$ACD011A[i]) == "" & as.character(responses$ACD011B[i]) != "" & as.character(responses$ACD011C[i]) == "") {
#B
x = responses$ACD011B[i]
ACD011_Comb = rbind(ACD011_Comb,x)
} else if (as.character(responses$ACD011A[i]) == "" & as.character(responses$ACD011B[i]) == "" & as.character(responses$ACD011C[i]) != "") {
#C
x = responses$ACD011C[i]
ACD011_Comb = rbind(ACD011_Comb,x)
}
ACD011_Comb
ACD011_Comb = data.frame(as.character())
#i = 1
ACD011_Comb = data.frame(as.character())
#i = 1
for (i in 1:nrow(responses)){
if (as.character(responses$ACD011A[i]) != "" & as.character(responses$ACD011B[i]) != "" & as.character(responses$ACD011C[i]) != ""){
#ABC
x = paste(responses$ACD011A[i], responses$ACD011B[i], responses$ACD011C[i], sep = ",")
ACD011_Comb = rbind(ACD011_Comb,x)
} else if (as.character(responses$ACD011A[i]) != "" & as.character(responses$ACD011B[i]) == "" & as.character(responses$ACD011C[i]) == "") {
#A
ACD011_Comb = rbind(ACD011_Comb, responses$ACD011A[i])
} else if (as.character(responses$ACD011A[i]) != "" & as.character(responses$ACD011B[i]) != "" & as.character(responses$ACD011C[i]) == "") {
#AB
x = paste(responses$ACD011A[i], responses$ACD011B[i], sep = ",")
ACD011_Comb = rbind(ACD011_Comb,x)
} else if (as.character(responses$ACD011A[i]) != "" & as.character(responses$ACD011B[i]) == "" & as.character(responses$ACD011C[i]) != "") {
#AC
x = paste(responses$ACD011A[i], responses$ACD011C[i], sep = ",")
ACD011_Comb = rbind(ACD011_Comb,x)
} else if (as.character(responses$ACD011A[i]) == "" & as.character(responses$ACD011B[i]) != "" & as.character(responses$ACD011C[i]) != "") {
#BC
ACD011_Comb[i] = paste(responses$ACD011B[i], responses$ACD011C[i], sep = ",")
} else if (as.character(responses$ACD011A[i]) == "" & as.character(responses$ACD011B[i]) != "" & as.character(responses$ACD011C[i]) == "") {
#B
x = responses$ACD011B[i]
ACD011_Comb = rbind(ACD011_Comb,x)
} else if (as.character(responses$ACD011A[i]) == "" & as.character(responses$ACD011B[i]) == "" & as.character(responses$ACD011C[i]) != "") {
#C
x = responses$ACD011C[i]
ACD011_Comb = rbind(ACD011_Comb,x)
}
}
ACD011_Comb
responses = read.csv("NHANES_subset.csv", stringsAsFactors = F)
responses = read.table("prefilled_survey_responses.txt", sep = '\t', stringsAsFactors = F)
responses = read.table("prefilled_survey_responses.txt", sep = '\t', fileEncoding = 'UTF-16', stringsAsFactors = F)
responses = read.csv("redundant/NHANES_subset.csv", stringsAsFactors = F)
names(responses)
responses$ACD011_Other = NA
names(responses)
languages = ("German", "French", "Swiss", "Afrikans", "Chinese", "Japanese", "Indonesian","Timorese", "Korean", "Thai")
languages = c("German", "French", "Swiss", "Afrikans", "Chinese", "Japanese", "Indonesian","Timorese", "Korean", "Thai")
sample(languages)
sample(languages, 4)
sample(languages)
sample(languages)
?sample
i = 1
responses$ACD011C[i] == "Other"
for i in 1:nrow(responses){
if responses$ACD011C[i] == "Other"{
responses$ACD011_Other[i] = sample(languages)[1]
}
}
for (i in 1:nrow(responses)){
if responses$ACD011C[i] == "Other"{
responses$ACD011_Other[i] = sample(languages)[1]
}
}
for (i in 1:nrow(responses)){
if (responses$ACD011C[i] == "Other"){
responses$ACD011_Other[i] = sample(languages)[1]
}
}
responses = responses[, c(1:4, ncol(responses), 5:ncol(responses)-1)]
names(responses)
write.csv("redundant/NHANES_subset.csv", row.names = F)
write.csv(responses, "redundant/NHANES_subset.csv", row.names = F)
